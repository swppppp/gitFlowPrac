<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration   PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
                          "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- MyBatis XML 설정 파일(MyBatis설정의 중앙 허브 역할) -->
<configuration>
	
	<!-- Database properties 설정파일 경로 설정 -->
	<properties resource="db-config.properties"/>
	
	<!--  MyBatis에서 사용할 자바클래스(패키지명 포함 풀네임)에 대한 짧은 별칭 등록 -->
	<typeAliases>
		<typeAlias type="kr.or.kosta.shoppingmall.employee.domain.Employee" alias="Employee"/> <!-- 미리 별칭으로 부여 -->
		<typeAlias type="kr.or.kosta.shoppingmall.user.domain.User" alias="User"/>
	</typeAliases>
	
	<!-- 다수의 Database에 접근하거나 개발, 테스트, 운영 환경에 맞는 다중 환경 설정 지원 -->
	<environments default="development">
		
		<!-- Database당 하나의 SqlSessionFactory 객체가 필요하며, Environment는 SqlSessionFactory 생성시 필요 -->
		<environment id="development"> <!-- 여러개 등록 가능 -->
			<!-- 트랜잭션 관리 방법 설정
			  - JDBC : JDBC API의 commit(), rollback() 메소드를 이용하여 MyBatis 자체에서 트랜잭션 관리
			  - MANAGED : WAS(WebLogic, WebSphere, JBoss 등)에서 지원하는 트랜잭션 관리 기능 이용			
			 -->
			<transactionManager type="JDBC" /> <!-- : 마이바티스가 하라는 얘기 -->
			
			<!-- MyBatis는 JDBC 표준 규약인 DataSource 구현체를 이용하여 DB 연결(Connection 생성) -->
			<!-- MyBatis가 지원하는 DataSource 유형
			  - UNPOOLED : DB 커넥션 요청할 때마다 DriverManager를 이용하여 Connection 객체 생성, 단순한 애플리케이션 개발 시 적합
			  - POOLED   : ConnectionPool로 부터 Connection 취득, 엔터프라이즈 웹 애플리케이션 개발 시 적합
			  - JNDI     : WAS에서 제공하는 DataSource 사용, 엔터프라이즈 웹 애플리케이션 개발 시 적합  : 데이터 객체를 was가 관리하고 있을 때 , 얘네를 접근하기위해 사용
			 -->
			<dataSource type="POOLED"> <!--  db 연결  반드시.. dbcp를 해놔야함 -->
				<!-- db-config.properties 설정 참조 -->
				<property name="driver" value="${driver}" /> <!-- 직접 써도 됨 : why property? - 보안때문에 : 프로퍼티를 암호화하면됨 -->
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${password}" />
				<property name="poolMaximumActiveConnections" value="5"/> <!-- Default 10 -->
				<property name="poolMaximumIdleConnections" value="2"/>   <!-- Default 5 -->
				<property name="poolMaximumCheckoutTime" value="10000"/>  <!-- Default 20000 -->
			</dataSource>
		</environment>
		
	</environments>
	
	<!-- SQL XML Mapper 파일 경로 설정 -->
	<mappers>
		<!-- 클래스패스에 위치한 XML 매퍼 파일 지정 -->
		<mapper resource="mappers/EmployeeMapper.xml"  /> <!-- 여기 안에 sql.xml 이 들어가있다!  -->
		<mapper resource="mappers/UserDaoMapper.xml"/>	
		<!-- URL을 사용한 XML 매퍼 파일 지정 -->
		<!-- <mapper url="file:///c:/someProject/mapper/SomeMapper.xml" />	 -->
		
		<!-- Mapper 인퍼페이스를 사용하는 인터페이스 위치 지정 -->
		<!-- <mapper class="kr.or.kosta.shoppingmall.employee.mapper.EmployeeMapper" />	 -->
		
		<!-- 패키지 지정으로 매퍼 자동 검색 -->
		<!-- <package name="kr.or.kosta.shoppingmall.employee.mapper" />	 -->
		
		<!-- XML 매퍼 파일 없이 Annotation 사용시 -->
		<!--<mapper class="kr.or.kosta.shoppingmall.employee.mapper.EmployeeAnnotationMapper" />-->
	</mappers>

</configuration>